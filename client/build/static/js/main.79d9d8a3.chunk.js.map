{"version":3,"sources":["logo.svg","Home.js","Beers.js","User.js","location.js","Showbeer.js","Posts.js","Random.js","New.js","Showpost.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","props","state","breweries","fetch","then","res","json","console","log","setState","this","map","brewery","name","brewery_type","Component","Beers","beers","className","beer","abv","tagline","src","image_url","food_pairing","to","User","users","response","catch","error","user","username","email","Location","length","google","zoom","style","width","height","initialCenter","lat","latitude","lng","longitude","position","GoogleApiWrapper","apiKey","Showbeer","match","params","description","catagory","Posts","handleDelete","post","headers","method","items","posts","filter","item","_id","index","key","title","picture","caption","category","onClick","Random","random","err","New","handleInputChange","event","target","value","handleSubmit","alert","preventDefault","axios","toDashboard","onSubmit","type","placeholder","onChange","Showpost","put","id","result","App","exact","path","component","render","routerProps","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oKAAAA,EAAOC,QAAU,IAA0B,kC,8ICmC5BC,G,kBAhCb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXC,UAAW,IAHI,E,iFAME,IAAD,OAClBC,MAAM,6DACHC,MAAK,SAAAC,GACJ,OAAOA,EAAIC,UAEZF,MAAK,SAAAF,GACJK,QAAQC,IAAIN,GACZ,EAAKO,SAAS,CAAEP,UAAWA,S,+BAI/B,OACE,6BACE,qCACCQ,KAAKT,MAAMC,UAAUS,KAAI,SAAAC,GACxB,OACE,4BACGA,EAAQC,KADX,MACoBD,EAAQE,aAD5B,a,GAvBOC,cCoDJC,E,YAlDX,WAAYhB,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTgB,MAAO,IAHI,E,iFAME,IAAD,OAEhBd,MAAM,kEACLC,MAAK,SAAAC,GACF,OAAOA,EAAIC,UAEdF,MAAK,SAAAa,GACF,EAAKR,SAAS,CACVQ,MAAOA,S,+BAQf,OACI,6BACA,6BACI,sCAGJ,yBAAKC,UAAU,WAEVR,KAAKT,MAAMgB,MAAMN,KAAI,SAAAQ,GAClB,OACI,yBAAKD,UAAU,OACf,4BAAKC,EAAKN,KAAV,KAAkBM,EAAKC,IAAvB,MACA,2BAAID,EAAKE,SACT,yBAAKC,IAAKH,EAAKI,YAIf,wDAA8BJ,EAAKK,aAAa,IAChD,kBAAC,IAAD,CAAMC,GAAI,aAAeN,EAAKN,MAAM,6CAApC,e,GAzCJE,aCoCLW,E,YApCX,WAAY1B,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACT0B,MAAO,IAHI,E,iFAME,IAAD,OACjBxB,MAAM,+BACJC,MAAK,SAAAwB,GAEH,OAAOA,EAAStB,UAEhBF,MAAK,SAAAC,GACJE,QAAQC,IAAIH,GACZ,EAAKI,SAAS,CAACkB,MAAOtB,OACvBwB,OAAM,SAAAC,GAAK,OAAIvB,QAAQC,IAAIsB,Q,+BAK/B,OACSpB,KAAKT,MAAM0B,MAAMhB,KAAI,SAAAoB,GACjB,OACI,yBAAKb,UAAU,eACX,oCAAUa,EAAKlB,MACf,wCAAckB,EAAKC,UACnB,qCAAWD,EAAKE,e,GA3BzBlB,a,QCENmB,EAAb,YACI,WAAYlC,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAQ,CACTC,UAAW,IAHD,EADtB,iFAQyB,IAAD,OAChBC,MAAM,6DACHC,MAAK,SAAAC,GACJ,OAAOA,EAAIC,UAEZF,MAAK,SAAAF,GAEJ,EAAKO,SAAS,CAAEP,UAAWA,SAfvC,+BA0BU,OAAGQ,KAAKT,MAAMC,UAAUiC,QAAU,EAG1B,6BACK5B,QAAQC,IAAIE,KAAKT,MAAMC,WAC5B,kBAAC,MAAD,CACDkC,OAAQ1B,KAAKV,MAAMoC,OACnBC,KAAM,EACNC,MAZS,CACdC,MAAO,OACPC,OAAQ,QAWHC,cAAe,CAAEC,IAAMhC,KAAKT,MAAMC,UAAU,GAAGyC,SAAUC,IAAKlC,KAAKT,MAAMC,UAAU,GAAG2C,YAExF,kBAAC,SAAD,CAAQC,SAAU,CAAEJ,IAAKhC,KAAKT,MAAMC,UAAU,GAAGyC,SAAUC,IAAKlC,KAAKT,MAAMC,UAAU,GAAG2C,eAMnF,0CA3CpB,GAA8B9B,aAiDfgC,6BAAiB,CAC5BC,OAAQ,2CADGD,CAEVb,GCbUe,E,YAtCX,WAAYjD,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTY,KAAM,EAAKb,MAAMkD,MAAMC,OAAOtC,KAC9BI,MAAO,IAJI,E,iFAOF,IAAD,OAEhBd,MAAM,8CAAgDO,KAAKT,MAAMY,MAChET,MAAK,SAAAC,GACF,OAAOA,EAAIC,UAEdF,MAAK,SAAAa,GACF,EAAKR,SAAS,CACVQ,MAAOA,EAAM,U,+BAOlB,IAAIE,EAAOT,KAAKT,MAAMgB,MACrB,OAED,6BACI,0CAAgBE,EAAKN,MACrB,yBAAKS,IAAKH,EAAKI,YACf,4CAAkBJ,EAAKE,SACvB,2CAAiBF,EAAKiC,aACtB,oCAAUjC,EAAKkC,UACf,kBAAC,EAAD,W,GAhCYtC,a,iBC2DRuC,E,YA1Db,WAAYtD,GAAQ,IAAD,8BACjB,4CAAMA,KAkBRuD,aAAe,SAACC,GACZjD,QAAQC,IAAI,oBACZL,MAAM,+BAAD,OAAgCqD,GAAQ,CACzCC,QAAS,CACL,eAAgB,oBAEpBC,OAAQ,WAEXtD,MAAK,SAAAC,GACFA,EAAIC,UAEPF,MAAK,SAAAE,GACF,IAAMqD,EAAQ,EAAK1D,MAAM2D,MAAMC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,MAAQP,KAC3D,EAAK/C,SAAS,CACVmD,MAAOD,QA/BjB,EAAK1D,MAAQ,CACX2D,MAAO,IAHQ,E,iFAME,IAAD,OAChBrD,QAAQC,IAAI,WACdL,MAAM,+BACHC,MAAK,SAAAwB,GACJ,OAAOA,EAAStB,UAEjBF,MAAK,SAAAC,GACJ,EAAKI,SAAS,CAAEmD,MAAOvD,OAExBwB,OAAM,SAAAC,GAAK,OAAIvB,QAAQC,IAAIsB,Q,+BAuBtB,IAAD,OACP,OAAOpB,KAAKT,MAAM2D,MAAMjD,KAAI,SAAC6C,EAAMQ,GACjC,OACE,yBAAK9C,UAAU,QACX,yBAAKA,UAAU,QAAQ+C,IAAKD,GAC9B,wBAAI9C,UAAU,aAAasC,EAAKU,OAChC,yBAAK5C,IAAKkC,EAAKW,UACf,2BAAIX,EAAKY,SACT,uCAAaZ,EAAK5C,SAClB,wCAAc4C,EAAKa,UACnB,4BAAQC,QAAS,kBAAM,EAAKf,aAAaC,EAAKO,OAA9C,UACA,kBAAC,IAAD,CAAMtC,GAAI,SAAW+B,EAAKO,KAAK,kD,GAlDrBhD,a,QC4BLwD,E,YA3BX,WAAYvE,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTuE,OAAQ,IAHG,E,iFAME,IAAD,OAChBrE,MAAM,2CAA2CC,MAAK,SAAAwB,GAClD,OAAOA,EAAStB,UACjBF,MAAK,SAAAC,GACJE,QAAQC,IAAIH,GACb,EAAKI,SAAS,CACb+D,OAAQnE,EAAI,QAGfwB,OAAM,SAAA4C,GAAG,OAAIlE,QAAQuB,MAAM2C,Q,+BAG5B,OACI,6BACA,8CAAoB/D,KAAKT,MAAMuE,OAAO3D,MACtC,yBAAKS,IAAKZ,KAAKT,MAAMuE,OAAOL,e,GAtBnBpD,aC6GN2D,E,YA1GX,WAAY1E,GAAQ,IAAD,8BACf,4CAAMA,KAUV2E,kBAAoB,SAAAC,GAChB,EAAKnE,SAAL,eACKmE,EAAMC,OAAOhE,KAAO+D,EAAMC,OAAOC,SAbvB,EAiBnBC,aAAe,SAAAH,GACZ,GAA4B,KAAxB,EAAK3E,MAAMoE,SACXW,MAAM,mBACH,CACNJ,EAAMK,iBADA,MAEgD,EAAKhF,MACrDuD,EAAO,CACTU,MAJE,EAEEA,MAEGE,QAJL,EAESA,QAEKD,QAJd,EAEkBA,QAEKvD,QAJvB,EAE2BA,QAEKyD,SAJhC,EAEoCA,UAI1Ca,IACC1B,KAAK,+BAAgCA,GACrCpD,MAAK,kBAAMG,QAAQC,IAAI,eAAgBgD,MACvCpD,MAAK,kBAAM,EAAKK,UAAS,iBAAO,CAC7B0E,aAAa,SAEhBtD,OAAM,SAAA4C,GACHlE,QAAQuB,MAAM2C,QA/BlB,EAAKxE,MAAQ,CACTiE,MAAO,GACPE,QAAQ,GACRD,QAAQ,GACRvD,QAAQ,GACRyD,SAAS,GACTc,aAAa,GARF,E,sEA0Cf,OAA+B,IAA3BzE,KAAKT,MAAMkF,YACJ,kBAAC,IAAD,CAAU1D,GAAG,gBAIpB,6BACI,6BACA,6BACI,0BAAM2D,SAAU1E,KAAKqE,cACjB,6BACI,2BACAM,KAAK,OACLnE,UAAU,OACVL,KAAK,QACLyE,YAAY,QACZC,SAAU7E,KAAKiE,qBAEnB,6BACA,6BACA,2BACIU,KAAK,OACLnE,UAAU,OACVL,KAAK,UACLyE,YAAY,UACZC,SAAU7E,KAAKiE,qBAEnB,6BACA,2BACIU,KAAK,OACLnE,UAAU,OACVL,KAAK,UACLyE,YAAY,UACZC,SAAU7E,KAAKiE,qBAEnB,6BACA,2BACIU,KAAK,OACLnE,UAAU,OACVL,KAAK,UACLyE,YAAY,UACZC,SAAU7E,KAAKiE,qBAEnB,6BACI,4BACI9D,KAAO,WAAW0E,SAAU7E,KAAKiE,mBACzC,4BAAQG,MAAM,UAAd,UACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,WAAd,aAGA,6BACA,6BACI,4BAAQO,KAAK,SAASf,QAAS5D,KAAKqE,cAApC,YAGR,kBAAC,EAAD,Y,GApGFhE,aC8HHyE,E,YA9HX,WAAYxF,GAAQ,IAAD,8BAEf,4CAAMA,KA6BV2E,kBAAoB,SAAAC,GAEhB,EAAKnE,SAAL,eACKmE,EAAMC,OAAOhE,KAAO+D,EAAMC,OAAOC,SAlCvB,EAuCnBC,aAAe,SAAAH,GACXrE,QAAQC,IAAI,oBACZoE,EAAMK,iBAFc,MAGgC,EAAKhF,MAAlDiE,EAHa,EAGbA,MAAOE,EAHM,EAGNA,QAASD,EAHH,EAGGA,QAASvD,EAHZ,EAGYA,QAASyD,EAHrB,EAGqBA,SACzCa,IAAMO,IAAI,oCAAsC,EAAKzF,MAAMkD,MAAMC,OAAOuC,GAAI,CAACxB,QAAOE,UAASD,UAASvD,UAASyD,aAC9GjE,MAAK,SAAAuF,GACFpF,QAAQC,IAAI,SAAWmF,MAExB9D,OAAM,SAAA4C,GAAG,OAAIlE,QAAQC,IAAIiE,OA3C5B,EAAKxE,MAAQ,CACTiE,MAAO,GACPE,QAAQ,GACRD,QAAQ,GACRvD,QAAQ,GACRyD,SAAS,IATE,E,iFAcE,IAAD,OAChBlE,MAAM,oCAAsCO,KAAKV,MAAMkD,MAAMC,OAAOuC,GAAI,CACpEhC,OAAQ,MACRD,QAAS,CACL,eAAgB,qCAErBrD,MAAK,SAAAwB,GACJ,OAAOA,EAAStB,UAEnBF,MAAK,SAAAE,GACFC,QAAQC,IAAIF,GACb,EAAKG,SAAS,CACb+C,KAAMlD,S,+BA2BV,OAFDC,QAAQC,IAAIE,KAAKV,MAAMkD,MAAMC,QAC5B5C,QAAQC,IAAIE,KAAKT,OAEb,6BACI,6BACA,6BACI,0BAAMmF,SAAU1E,KAAKqE,cACjB,6BACI,2BACAM,KAAK,OACLnE,UAAU,OACVL,KAAK,QACLiE,MAAOpE,KAAKT,MAAMiE,MAClBoB,YAAY,QACZC,SAAU7E,KAAKiE,qBAEnB,6BACA,6BACA,2BACIU,KAAK,OACLnE,UAAU,OACVL,KAAK,UACLyE,YAAY,UACZC,SAAU7E,KAAKiE,qBAEnB,6BACA,2BACIU,KAAK,OACLnE,UAAU,OACVL,KAAK,UACLyE,YAAa,UACbC,SAAU7E,KAAKiE,qBAEnB,6BACA,2BACIU,KAAK,OACLnE,UAAU,OACVL,KAAK,UACLyE,YAAY,UACZC,SAAU7E,KAAKiE,qBAEnB,6BACA,2BACIU,KAAK,OACLnE,UAAU,OACVL,KAAK,WACLyE,YAAY,WACZC,SAAU7E,KAAKiE,qBAEnB,6BACA,2BACIU,KAAK,OACLnE,UAAU,OACVL,KAAK,OACLyE,YAAY,WACZC,SAAU7E,KAAKiE,qBAEnB,6BACA,6BACI,4BAAQU,KAAK,UAAb,YAGR,yBAAKnE,UAAU,UACX,kBAAC,EAAD,a,GAnHDH,aCiER6E,E,YAxDb,WAAY5F,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXgB,MAAO,IAHQ,E,sEAQR,IAAD,OACR,OACE,6BACA,6BACE,6BACA,kBAAC,IAAD,CAAMQ,GAAG,KACP,qCAEF,kBAAC,IAAD,CAAMA,GAAG,UACP,2CAEF,kBAAC,IAAD,CAAMA,GAAG,eACP,2CAEF,kBAAC,IAAD,CAAMA,GAAG,eACP,yCAIF,kBAAC,IAAD,CAAMA,GAAG,YACP,2CAKF,8BACE,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOoE,OAAK,EAACC,KAAK,IAClBC,UAAWhG,IACX,kBAAC,IAAD,CAAO+F,KAAK,SAASC,UAAW/E,IAChC,kBAAC,IAAD,CAAO8E,KAAK,kBAAkBE,OAAQ,SAAAC,GAAW,OAAI,kBAAC,EAAD,iBAAcA,EAAd,CAA2BhF,MAAO,EAAKhB,MAAMgB,YACnG,kBAAC,IAAD,CAAO6E,KAAK,cAAcC,UAAWrE,IACrC,kBAAC,IAAD,CAAOmE,OAAK,EAACC,KAAK,cAAcC,UAAWzC,IAC3C,kBAAC,IAAD,CAAOuC,OAAK,EAACC,KAAK,WAAWC,UAAWrB,IAExC,kBAAC,IAAD,CAAOmB,OAAK,EAACC,KAAK,YAAYC,UAAWP,W,GA5ChCzE,aCAEmF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASnD,MACvB,2DCXNoD,IAASN,OAAO,kBAAC,IAAD,KAAQ,kBAAC,EAAD,OAAkBO,SAASC,eAAe,SD0H5D,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvG,MAAK,SAAAwG,GACjCA,EAAaC,kB","file":"static/js/main.79d9d8a3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      breweries: []\n    };\n  }\n  componentDidMount() {\n    fetch('https://api.openbrewerydb.org/breweries?by_state=new_york')\n      .then(res => {\n        return res.json();\n      })\n      .then(breweries => {\n        console.log(breweries);\n        this.setState({ breweries: breweries });\n      });\n  }\n  render() {\n    return (\n      <div>\n        <h1>Posts</h1>\n        {this.state.breweries.map(brewery => {\n          return (\n            <h3>\n              {brewery.name}, ({brewery.brewery_type})\n            </h3>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\"\nimport \"./App.css\"\nimport { Link } from \"react-router-dom\"\nclass Beers extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            beers: []\n         }\n    }\n    componentDidMount() {\n        // beers brewed after 11/2010\n        fetch('https://api.punkapi.com/v2/beers?brewed_after=11-2010&abv_gt=6')\n        .then(res => {\n            return res.json()\n        })\n        .then(beers => {\n            this.setState({\n                beers: beers\n            })\n        }\n        )\n        \n    }\n    \n    render() { \n        return ( \n            <div>\n            <div>\n                <h2>Beers</h2>\n            </div>\n\n            <div className=\"wrapper\">\n               \n                {this.state.beers.map(beer => {\n                    return(\n                        <div className=\"box\">\n                        <h4>{beer.name} ({beer.abv}%)</h4>\n                        <p>{beer.tagline}</p>\n                        <img src={beer.image_url} />\n                        {/* add description below {beer.description} */}\n                              \n                        {/* <p>{beer.description}</p> */}\n                        <p>Recommended Food Pairing: {beer.food_pairing[0]}</p>\n                        <Link to={\"/showbeer/\" + beer.name}><button>Read More</button> </Link> \n                        </div>\n                    )\n                })}\n            </div>\n            </div>\n         )\n    }\n}\n \nexport default Beers;","import React, { Component } from \"react\"\n\nclass User extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            users: []\n        }\n    }\n    componentDidMount() {\n       fetch('http://localhost:3000/users')\n        .then(response => {\n            \n           return response.json();\n            \n        }).then(res => {\n            console.log(res)\n            this.setState({users: res})\n        }).catch(error => console.log(error))\n    }\n\n   render() {\n      \n       return(\n                this.state.users.map(user => {\n                    return( \n                        <div className=\"userProfile\">\n                            <h2>Name:{user.name}</h2>\n                            <p>username: {user.username}</p>\n                            <p>Email: {user.email}</p>\n                            </div>\n                    )\n                })\n           \n              \n       )\n   }\n}\n\nexport default User;","import React, { Component } from \"react\"\nimport { Map, GoogleApiWrapper, Marker} from 'google-maps-react';\n\n\nexport class Location extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            breweries: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://api.openbrewerydb.org/breweries?by_state=new_york')\n          .then(res => {\n            return res.json();\n          })\n          .then(breweries => {\n            // console.log(breweries);\n            this.setState({ breweries: breweries });\n          });\n      }\n      \n\n    \n    render(){\n        const mapStyles = {\n            width: '100%',  \n            height: '100%',\n          };\n          if(this.state.breweries.length >= 1){\n              return(\n                  \n                  <div>\n                      {console.log(this.state.breweries)}\n                  <Map\n                 google={this.props.google}\n                 zoom={8}\n                 style={mapStyles}\n                 initialCenter={{ lat:  this.state.breweries[1].latitude, lng: this.state.breweries[1].longitude}}\n                 >\n               <Marker position={{ lat: this.state.breweries[1].latitude, lng: this.state.breweries[1].longitude}} />\n               </Map>\n                 </div>\n              )\n              }else{\n                  return(\n                    <div>hello</div>\n                  )\n              }\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyCe0VY_DYBJhtnHlKbOVnIcY3ZUkP7ZQ_4'\n  })(Location);","import React, { Component } from \"react\"\nimport Location from \"./location\"\n\nclass Showbeer extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: this.props.match.params.name,\n            beers: {}\n        }\n    }\ncomponentDidMount() {\n    // beers brewed after 11/2010\n    fetch('https://api.punkapi.com/v2/beers?beer_name=' + this.state.name)\n    .then(res => {\n        return res.json()\n    })\n    .then(beers => {\n        this.setState({\n            beers: beers[0]\n        })\n    }\n    )\n    \n}\n    render()  {\n       let beer = this.state.beers;\n        return(\n         \n       <div>\n           <h1>Beer Name: {beer.name}</h1>\n           <img src={beer.image_url}/>\n           <p>Beer tagline: {beer.tagline}</p>\n           <p>Description: {beer.description}</p>\n           <p>Type: {beer.catagory}</p>\n           <Location />\n       </div>\n                )\n            }\n        }\n      \n        \nexport default Showbeer;","import React, { Component } from 'react';\nimport axios from \"axios\"\nimport { Link } from \"react-router-dom\"\nclass Posts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: []\n    };\n  }\n  componentDidMount() {\n      console.log('mounted')\n    fetch('http://localhost:3000/posts')\n      .then(response => {\n        return response.json();\n      })\n      .then(res => {\n        this.setState({ posts: res });\n      })\n      .catch(error => console.log(error));\n  }\n\n \n  handleDelete = (post) => { \n      console.log('in handle delete')\n      fetch(`http://localhost:3000/posts/${post}`, {\n          headers: {\n              \"Content-Type\": \"application/json\"\n          },\n          method: 'DELETE'\n      })\n      .then(res=> {\n          res.json()\n      })\n      .then(json => {\n          const items = this.state.posts.filter(item => item._id !== post)\n          this.setState({\n              posts: items\n          })\n          })\n        }\n  \n  render() {\n    return this.state.posts.map((post, index) => {\n      return (\n        <div className='post'>\n            <div className=\"inner\" key={index}>\n          <h2 className=\"beerTitle\">{post.title}</h2>\n          <img src={post.picture} />\n          <p>{post.caption}</p>\n          <p>Brewery: {post.brewery}</p>\n          <p>Category: {post.category}</p>\n          <button onClick={() => this.handleDelete(post._id)}>Delete</button>\n          <Link to={\"/edit/\" + post._id}><button>Edit</button></Link>\n\n          </div>\n        </div>\n      );\n    });\n  }\n}\n\nexport default Posts;\n","import React, { Component} from \"react\"\n\n\nclass Random extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            random: []\n         }\n    }\n    componentDidMount() {\n        fetch('https://api.punkapi.com/v2/beers/random').then(response => {\n            return response.json()\n        }).then(res => {\n            console.log(res)\n           this.setState({\n            random: res[0]\n           }) \n        })\n        .catch(err => console.error(err))\n    }\n    render() { \n        return ( \n            <div>\n            <p>Random brewski: {this.state.random.name}</p>\n            <img src={this.state.random.picture}/>\n            </div>\n         )\n    }\n}\n \nexport default Random;","import React, { Component } from \"react\"\nimport { Redirect } from 'react-router-dom'\nimport axios from \"axios\"\nimport Random from \"./Random\"\n\nclass New extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            title: '',\n            caption:\"\",\n            picture:\"\",\n            brewery:\"\",\n            category:\"\",\n            toDashboard: false\n         }\n    }\n    handleInputChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit = event => {\n       if (this.state.category === \"\") {\n           alert(\"not correct\")\n       } else {\n        event.preventDefault();\n        const { title, caption, picture, brewery, category} = this.state;\n        const post = {\n            title, caption, picture, brewery, category\n        }\n        axios\n        .post('http://localhost:3000/posts/', post)\n        .then(() => console.log('post created', post))\n        .then(() => this.setState(() => ({\n            toDashboard: true\n          })))\n        .catch(err => {\n            console.error(err)\n        })\n      \n    }\n\n    }\n\n\n    render() { \n        if (this.state.toDashboard === true) {\n            return <Redirect to='/show/posts' />\n          }\n\n        return ( \n            <div>\n                <br />\n                <div>\n                    <form onSubmit={this.handleSubmit}>\n                        <div>\n                            <input \n                            type=\"text\"\n                            className=\"form\"\n                            name=\"title\"\n                            placeholder=\"Title\"\n                            onChange={this.handleInputChange}/>\n                        </div>\n                        <br />\n                        <div>\n                        <input \n                            type=\"text\"\n                            className=\"form\"\n                            name=\"caption\"\n                            placeholder=\"Caption\"\n                            onChange={this.handleInputChange}/>\n                        </div>\n                        <div>\n                        <input \n                            type=\"text\"\n                            className=\"form\"\n                            name=\"picture\"\n                            placeholder=\"Picture\"\n                            onChange={this.handleInputChange}/>\n                        </div>\n                        <div>\n                        <input \n                            type=\"text\"\n                            className=\"form\"\n                            name=\"brewery\"\n                            placeholder=\"Brewery\"\n                            onChange={this.handleInputChange}/>\n                        </div>\n                        <div>\n                            <select \n                                name = \"category\" onChange={this.handleInputChange}>\n                        <option value=\"Select\">Select</option>\n                        <option value=\"Lager\">Lager</option>\n                        <option value=\"Port\">Port</option>\n                        <option value=\"IPA\">IPA</option>\n                        <option value=\"Belgium\">Belgium</option>\n                             </select> \n                        </div>\n                        <br />\n                        <div>\n                            <button type=\"submit\" onClick={this.handleSubmit}>Create</button>\n                        </div>\n                    </form>\n                    <Random />\n                </div>\n            </div>\n         );\n    }\n}\n \nexport default New;","import React, { Component } from \"react\"\nimport { Redirect } from \"react-router-dom\"\nimport axios from \"axios\"\nimport Random from \"./Random\"\nclass Showpost extends Component {\n    constructor(props) {\n        \n        super(props)\n        \n        this.state = {\n            title: '',\n            caption:\"\",\n            picture:\"\",\n            brewery:\"\",\n            category:\"\"\n           \n        }\n    \n    }\n    componentDidMount() {\n        fetch('http://localhost:3000/posts/edit/' + this.props.match.params.id, {\n            method: 'PUT',\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n        }).then(response => {\n            return response.json()\n        })\n        .then(json => {\n            console.log(json)\n           this.setState({\n            post: json\n           }) \n           \n        })\n    }\n    handleInputChange = event => {\n        \n        this.setState({\n            [event.target.name]: event.target.value \n        });\n        \n    }\n   \n    handleSubmit = event => {\n        console.log('in handle submit')\n        event.preventDefault();\n        const {title, caption, picture, brewery, category} =this.state\n        axios.put('http://localhost:3000/posts/edit/' + this.props.match.params.id, {title, caption, picture, brewery, category})\n        .then(result => {\n            console.log('result' + result)\n          \n        }).catch(err => console.log(err))\n    }\n\n    render()  {\n       console.log(this.props.match.params)\n        console.log(this.state)\n        return (\n            <div>\n                <br />\n                <div>\n                    <form onSubmit={this.handleSubmit}>\n                        <div>\n                            <input \n                            type=\"text\"\n                            className=\"form\"\n                            name=\"title\"\n                            value={this.state.title}\n                            placeholder=\"Title\"\n                            onChange={this.handleInputChange}/>\n                        </div>\n                        <br />\n                        <div>\n                        <input \n                            type=\"text\"\n                            className=\"form\"\n                            name=\"caption\"\n                            placeholder=\"Caption\"\n                            onChange={this.handleInputChange}/>\n                        </div>\n                        <div>\n                        <input \n                            type=\"text\"\n                            className=\"form\"\n                            name=\"picture\"\n                            placeholder={\"Picture\"}\n                            onChange={this.handleInputChange}/>\n                        </div>\n                        <div>\n                        <input \n                            type=\"text\"\n                            className=\"form\"\n                            name=\"brewery\"\n                            placeholder=\"Brewery\"\n                            onChange={this.handleInputChange}/>\n                        </div>\n                        <div>\n                        <input \n                            type=\"text\"\n                            className=\"form\"\n                            name=\"category\"\n                            placeholder=\"Category\"\n                            onChange={this.handleInputChange}/>\n                        </div>\n                        <div>\n                        <input \n                            type=\"text\"\n                            className=\"form\"\n                            name=\"user\"\n                            placeholder=\"userName\"\n                            onChange={this.handleInputChange}/>\n                        </div>\n                        <br />\n                        <div>\n                            <button type=\"submit\" >Update</button>\n                        </div>\n                    </form>\n                    <div className=\"search\">\n                        <Random />\n                    </div>\n                </div>\n        </div>\n \n        )\n    \n                \n            }\n        }\n      \n        \nexport default Showpost;","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport {Link, Route, Switch} from \"react-router-dom\"\nimport './App.css';\nimport Home from \"./Home\"\nimport Beers from \"./Beers\"\nimport User from \"./User\"\nimport Showbeer from \"./Showbeer\"\nimport Posts from \"./Posts\"\nimport New from \"./New\"\nimport Random from \"./Random\"\nimport Showpost from \"./Showpost\"\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      beers: {}\n \n    }\n  }\n  \n  render () {\n    return (\n      <div>\n      <div>\n        <nav>\n        <Link to=\"/\">\n          <h1>Home</h1>\n        </Link>\n        <Link to=\"/beers\">\n          <h2>View Beers</h2>\n        </Link>\n        <Link to=\"/show/users\">\n          <h2>Show Users</h2>\n        </Link>\n        <Link to=\"/show/posts\">\n          <h2>\n            BeerPals\n          </h2>\n        </Link>\n        <Link to=\"/newpost\">\n          <h2>New Post</h2>\n        </Link>\n        \n        </nav>\n        </div>\n        <main>\n          <Switch>\n          <Route exact path=\"/\"\n          component={Home}/>\n          <Route path=\"/beers\" component={Beers}/>\n          <Route path=\"/showbeer/:name\" render={routerProps => <Showbeer {...routerProps} beers={this.state.beers}/>}/>\n         <Route path=\"/show/users\" component={User}/>\n         <Route exact path=\"/show/posts\" component={Posts}/>\n         <Route exact path=\"/newpost\" component={New}/>\n         {/* <Route path=\"/edit/:id\" render={routerProps => <Showpost {...routerProps} post={this.state.beers}/>}/> */}\n         <Route exact path=\"/edit/:id\" component={Showpost}/>\n          {/* <Route path=\"/show\"\n          component={ShowBeer}/> */}\n        </Switch>\n        </main>\n     \n        </div>\n    )\n  }\n    \n \n}\n\nexport default App;\n\n// to run, mongod must be running, nodemon, and npm on backend. npm run start on frontend too\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router} from \"react-router-dom\"\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}